<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int SCR = 2;
const int LET = 2;
const int PROC = SCR + LET;
const int NONE = -1;

typedef int[0,PROC-1]pid;
typedef int[0,SCR-1]s_id;
typedef int[SCR,PROC-1]l_id;

bool scrittore_dentro = false;
int lettori_in = 0;
int lettori_w=0;
bool pass=false;

chan startRead[pid];
chan endRead[pid];
chan startWrite[pid];
chan endWrite[pid];
broadcast chan check;
chan ok[pid];

const int[1,PROC] qs=PROC; 

typedef struct{
    int q[qs];
    int[0,qs-1]in,out;
    bool op;
}queue;

queue writer_arrival;
queue reader_arrival;

void enq(queue &amp;q,const pid p){
    q.q[q.in]=p;
    q.in = (q.in+1)%qs;
    q.op = true;
}

pid deq(queue &amp;q){
    pid next = q.q[q.out];
    q.q[q.out]=NONE;
    q.out = (q.out+1)%qs;
    q.op = false;
    return next;
}

bool empty(queue q){ return !q.op &amp;&amp; q.in == q.out;}

bool full(queue q){ return q.op &amp;&amp; q.in == q.out; }

bool head(queue q,const pid id){ return q.q[q.out]==id;}
</declaration>
	<template>
		<name>Lettore</name>
		<parameter>const l_id id</parameter>
		<declaration>clock x;</declaration>
		<location id="id0" x="-212" y="-25">
		</location>
		<location id="id1" x="-51" y="-144">
			<name x="-61" y="-178">Inside</name>
			<label kind="invariant" x="-42" y="-136">x&lt;4</label>
		</location>
		<location id="id2" x="-212" y="-144">
			<name x="-222" y="-178">Req</name>
		</location>
		<location id="id3" x="-374" y="-144">
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-356" y="-42">ok[id]?</label>
			<nail x="-374" y="-25"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-42" y="-76">x&gt;2</label>
			<label kind="synchronisation" x="-42" y="-59">endRead[id]!</label>
			<nail x="-51" y="-25"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-194" y="-161">ok[id]?</label>
			<label kind="assignment" x="-194" y="-144">x=0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-356" y="-161">startRead[id]!</label>
		</transition>
	</template>
	<template>
		<name>Gestore</name>
		<parameter>const pid id</parameter>
		<location id="id4" x="-586" y="127">
			<committed/>
		</location>
		<location id="id5" x="-484" y="8">
			<committed/>
		</location>
		<location id="id6" x="-561" y="-85">
			<committed/>
		</location>
		<location id="id7" x="-714" y="-187">
		</location>
		<location id="id8" x="-561" y="-187">
			<committed/>
		</location>
		<location id="id9" x="-68" y="102">
			<committed/>
		</location>
		<location id="id10" x="-246" y="-280">
		</location>
		<location id="id11" x="-76" y="-178">
			<committed/>
		</location>
		<location id="id12" x="-229" y="102">
			<committed/>
		</location>
		<location id="id13" x="-246" y="-178">
			<committed/>
		</location>
		<location id="id14" x="-246" y="-34">
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-568" y="50">check!</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="-187" y="127">lettori_in&gt;0</label>
			<nail x="-195" y="119"/>
			<nail x="-85" y="119"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="-186" y="42">lettori_in==0</label>
			<label kind="synchronisation" x="-186" y="59">check!</label>
			<nail x="-204" y="76"/>
			<nail x="-110" y="76"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="-228" y="-314">!pass</label>
			<label kind="synchronisation" x="-228" y="-297">check?</label>
			<label kind="assignment" x="-228" y="-280">lettori_in++,
lettori_w--</label>
			<nail x="-76" y="-280"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-484" y="59">ok[id]!</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-433" y="-25">endWrite[id]?</label>
			<label kind="assignment" x="-466" y="-13">scrittore_dentro=false,
pass=false</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-450" y="-76">ok[id]!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="-697" y="-348">head(writer_arrival,id)&amp;&amp;
lettori_in==0 &amp;&amp; ( pass || lettori_w==0)</label>
			<label kind="synchronisation" x="-696" y="-314">check?</label>
			<label kind="assignment" x="-696" y="-297">deq(writer_arrival)</label>
			<nail x="-714" y="-204"/>
			<nail x="-714" y="-297"/>
			<nail x="-561" y="-297"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="guard" x="-637" y="-161">lettori_in==0 &amp;&amp;
!scrittore_dentro</label>
			<label kind="assignment" x="-637" y="-127">scrittore_dentro=true</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-696" y="-221">lettori_in&gt;0 ||
scrittore_dentro</label>
			<label kind="assignment" x="-696" y="-187">enq(writer_arrival,id)</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-459" y="-127">startWrite[id]?</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-119" y="-8">ok[id]!</label>
			<nail x="-34" y="34"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-68" y="-102">ok[id]!</label>
			<nail x="-76" y="-34"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id10"/>
			<label kind="guard" x="-374" y="-255">scrittore_dentro ||
!empty(writer_arrival)</label>
			<label kind="assignment" x="-374" y="-221">lettori_w++</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="guard" x="-228" y="-212">!scrittore_dentro &amp;&amp;
empty(writer_arrival)</label>
			<label kind="assignment" x="-228" y="-178">lettori_in++</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-340" y="17">endRead[id]?</label>
			<label kind="assignment" x="-323" y="34">lettori_in--,
pass=lettori_in==0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-314" y="-136">startRead[id]?</label>
		</transition>
	</template>
	<template>
		<name>Scrittore</name>
		<parameter>const s_id id</parameter>
		<declaration>clock x;</declaration>
		<location id="id15" x="-59" y="51">
		</location>
		<location id="id16" x="-59" y="-76">
			<name x="-69" y="-110">Inside</name>
			<label kind="invariant" x="-42" y="-76">x&lt;5</label>
		</location>
		<location id="id17" x="-238" y="-76">
			<name x="-248" y="-110">Req</name>
		</location>
		<location id="id18" x="-425" y="-76">
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id15"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-407" y="34">ok[id]?</label>
			<nail x="-425" y="51"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-51" y="-17">x&gt;2</label>
			<label kind="synchronisation" x="-59" y="-34">endWrite[id]!</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-195" y="-93">ok[id]?</label>
			<label kind="assignment" x="-220" y="-76">x=0</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-407" y="-93">startWrite[id]!</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Gestore,Scrittore,Lettore;
    </system>
	<queries>
		<query>
			<formula>E&lt;&gt; Scrittore(0).Inside &amp;&amp; Lettore(3).Inside
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>Scrittore(0).Req --&gt; Scrittore(0).Inside
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt;deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
