<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int L=0, C=1, V=2;
typedef int[0,2] tip;
bool mA[tip]={true,true,true}; 
bool mB[tip]={false,false,false};
bool b[tip]={false,false,false}; //contenuto barca
chan getA[tip], putA[tip], getB[tip], putB[tip];

bool g(){
  return forall(i:tip) mB[i];
}

bool vA(){ //vincoli quando la barca è sulla sponda A
   return b[L]+b[C]+b[V]&lt;=1 &amp;&amp;
          (mA[L]+mA[C]+mA[V]&lt;=1 || mA[L]+mA[C]+mA[V]==3 ||
           mA[L]+mA[C]+mA[V]==2 &amp;&amp; !mA[C]);
}

bool vB(){ //vincoli quando la barca è sulla sponda B
   return b[L]+b[C]+b[V]&lt;=1 &amp;&amp;
          (mB[L]+mB[C]+mB[V]&lt;=1 || mB[L]+mB[C]+mB[V]==3 ||
           mB[L]+mB[C]+mB[V]==2 &amp;&amp; !mB[C]);
}</declaration><template><name x="5" y="5">Barca</name><declaration>// Place local declarations here.
</declaration><location id="id0" x="-272" y="56"><name x="-328" y="48">ritorno</name><label kind="invariant" x="-296" y="72">vB()</label></location><location id="id1" x="184" y="-208"><name x="200" y="-224">andata</name><label kind="invariant" x="192" y="-200">vA()</label></location><location id="id2" x="-48" y="56"><committed/></location><location id="id3" x="88" y="-72"><name x="104" y="-72">SB</name><label kind="invariant" x="48" y="-104">vB()</label></location><location id="id4" x="-48" y="-208"><committed/></location><location id="id5" x="-192" y="-72"><name x="-232" y="-96">SA</name><label kind="invariant" x="-200" y="-56">vA()</label></location><init ref="id5"/><transition><source ref="id0"/><target ref="id5"/><nail x="-272" y="-72"/></transition><transition><source ref="id1"/><target ref="id3"/><nail x="184" y="-72"/></transition><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-224" y="96">getB[V]!</label><label kind="assignment" x="-168" y="96">b[V]=true</label><nail x="-88" y="96"/><nail x="-240" y="96"/></transition><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-224" y="16">getB[C]!</label><label kind="assignment" x="-168" y="16">b[C]=true</label><nail x="-88" y="16"/><nail x="-224" y="16"/></transition><transition><source ref="id2"/><target ref="id0"/><nail x="-48" y="40"/><nail x="-80" y="-8"/><nail x="-240" y="-8"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-16" y="-64">!g()</label><nail x="32" y="-72"/><nail x="-40" y="0"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="72" y="32">!g()&amp;&amp;b[V]</label><label kind="synchronisation" x="64" y="48">putB[V]!</label><label kind="assignment" x="56" y="64">b[V]=false</label><nail x="120" y="-8"/><nail x="40" y="80"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="32" y="-8">!g()&amp;&amp;b[C]</label><label kind="synchronisation" x="24" y="8">putB[C]!</label><label kind="assignment" x="8" y="24">b[C]=false</label><nail x="88" y="-24"/><nail x="16" y="56"/></transition><transition><source ref="id2"/><target ref="id0"/><label kind="synchronisation" x="-224" y="56">getB[L]!</label><label kind="assignment" x="-168" y="56">b[L]=true</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="-8" y="-32">!g()&amp;&amp;b[L]</label><label kind="synchronisation" x="-16" y="-16">putB[L]!</label><label kind="assignment" x="-32" y="0">b[L]=false</label></transition><transition><source ref="id4"/><target ref="id1"/><nail x="-8" y="-176"/><nail x="136" y="-176"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="0" y="-224">b[L]</label><label kind="synchronisation" x="32" y="-224">putA[L]!</label><label kind="assignment" x="88" y="-224">b[L]=false</label></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="0" y="-256">b[C]</label><label kind="synchronisation" x="32" y="-256">putA[C]!</label><label kind="assignment" x="88" y="-256">b[C]=false</label><nail x="0" y="-240"/><nail x="128" y="-240"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="guard" x="0" y="-288">b[V]</label><label kind="synchronisation" x="32" y="-288">putA[V]!</label><label kind="assignment" x="88" y="-288">b[V]=false</label><nail x="0" y="-272"/><nail x="136" y="-272"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-160" y="-144">getA[L]!</label><label kind="assignment" x="-160" y="-128">b[L]=true</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-200" y="-240">getA[V]!</label><label kind="assignment" x="-200" y="-224">b[V]=true</label><nail x="-232" y="-152"/><nail x="-128" y="-248"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-192" y="-184">getA[C]!</label><label kind="assignment" x="-192" y="-168">b[C]=true</label><nail x="-192" y="-144"/><nail x="-112" y="-208"/></transition><transition><source ref="id5"/><target ref="id4"/><nail x="-128" y="-80"/><nail x="-56" y="-144"/></transition></template><template><name>Molo</name><parameter>bool &amp;m[tip], chan &amp;get[tip], chan &amp;put[tip]</parameter><location id="id6" x="-120" y="-48"><name x="-176" y="-56">Home</name></location><init ref="id6"/><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-168" y="0">!m[V]</label><label kind="synchronisation" x="-168" y="16">put[V]?</label><label kind="assignment" x="-168" y="32">m[V]=true</label><nail x="-120" y="8"/><nail x="-152" y="0"/></transition><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-80" y="-8">!m[C]</label><label kind="synchronisation" x="-80" y="8">put[C]?</label><label kind="assignment" x="-80" y="24">m[C]=true</label><nail x="-104" y="-40"/><nail x="-72" y="-8"/><nail x="-96" y="8"/></transition><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-48" y="-64">!m[L]</label><label kind="synchronisation" x="-48" y="-48">put[L]?</label><label kind="assignment" x="-48" y="-32">m[L]=true</label><nail x="-96" y="-48"/><nail x="-56" y="-48"/><nail x="-64" y="-24"/></transition><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-72" y="-120">m[V]</label><label kind="synchronisation" x="-64" y="-104">get[V]?</label><label kind="assignment" x="-56" y="-88">m[V]=false</label><nail x="-72" y="-96"/><nail x="-56" y="-72"/></transition><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-136" y="-152">m[C]</label><label kind="synchronisation" x="-136" y="-136">get[C]?</label><label kind="assignment" x="-144" y="-120">m[C]=false</label><nail x="-120" y="-64"/><nail x="-128" y="-104"/><nail x="-96" y="-104"/></transition><transition><source ref="id6"/><target ref="id6"/><label kind="guard" x="-216" y="-128">m[L]</label><label kind="synchronisation" x="-224" y="-112">get[L]?</label><label kind="assignment" x="-240" y="-96">m[L]=false</label><nail x="-176" y="-72"/><nail x="-160" y="-96"/></transition></template><system>// Place template instantiations here.
spondaA=Molo( mA, getA, putA );
spondaB=Molo( mB, getB, putB );
// List one or more processes to be composed into a system.
system spondaA,spondaB,Barca;</system></nta>